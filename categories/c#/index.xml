<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Nothing in Particular</title>
    <link>https://0xnf.github.io/categories/c#/</link>
    <description>Recent content in C# on Nothing in Particular</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Sep 2018 07:22:07 -0700</lastBuildDate>
    
	<atom:link href="https://0xnf.github.io/categories/c#/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ESK8BST -  Electric Skateboard Buy / Sell / Trade</title>
      <link>https://0xnf.github.io/posts/esk8bst/esk8bst/</link>
      <pubDate>Mon, 03 Sep 2018 07:22:07 -0700</pubDate>
      
      <guid>https://0xnf.github.io/posts/esk8bst/esk8bst/</guid>
      <description>The Finished Product Raison D&amp;rsquo;etre Structure  Front End  React  Components Pages  Services  FindThread.ts GetNewestData.ts Determining BST Status Determining Price and Currency Determining Product and Company Other Data   Backend  .NET Core  Database  ScanData Subscribers Preconfirmed   Third-Party Services  Netlify Firebase AWS Serverless / Lambda  Serverless Project Functions Logging  MailGun  Types of Email Email Deliverability Email Services Mailgun&amp;rsquo;s Services  Double Opt-In + Unsubscribe Automated Security Scan    Privacy and Security  Firebase Rules / Service Accounts Reddit triggering Tracking Protection   The Finished Product Available at https://esk8bst.</description>
    </item>
    
    <item>
      <title>Lyricall Security</title>
      <link>https://0xnf.github.io/posts/lyricall/security/</link>
      <pubDate>Tue, 22 May 2018 17:02:40 -0700</pubDate>
      
      <guid>https://0xnf.github.io/posts/lyricall/security/</guid>
      <description>This is the Security Model for lyricall.net as of May 22nd, 2018.
Security Model tl;dr:
 The servers are secure
 The services are secure
 Connections are secure
 Data is validated
 Ownership is checked
  todo:
 Encrypt db at Rest
 Automatically rotate dbhost/dbname/dbuer/dbpassword values Spin out authentication server from api server
 Spin out client server from api server  Server Provisioning All machines are provisioned in the standard manner:</description>
    </item>
    
    <item>
      <title>Lyricall Architecture</title>
      <link>https://0xnf.github.io/posts/lyricall/architecture/</link>
      <pubDate>Tue, 22 May 2018 15:35:08 -0700</pubDate>
      
      <guid>https://0xnf.github.io/posts/lyricall/architecture/</guid>
      <description>This summary of the architecture was correct upon its initial posting (November 2017). Changes have since been made. There is no guarantee that this post remains accurate into the future.
Table of Contents  Architecture of lyricall.net  Technology tl;dr: App Overview Front End  TypeScript Why TypeScript Redux React Why React  Back End Database - PostgreSQL  Why Postgres Database Schema Lyricall Tables Straggler Tables ASP.NET / Entity Framework Tables  Server - .</description>
    </item>
    
  </channel>
</rss>